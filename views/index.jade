extends layout

block content

  #header
    a#top.smooth
    #header-content
      h1#title      dadler codes
      #statement-container
        #helper
          h2#statement  Full Stack Web Developer
      h3#cta
        a(href="#about").header-link     about
        a(href="#portfolio").header-link portfolio

  #content
    #bio
      a#about.smooth
      .content-bio
        p#bio-text
          | My name is Daniel Adler, but you can call me dadler. 
          br
          br
          | I'm a web developer with #[a(href="http://code.builders") honing my craft] in Portland, OR.
          br
          br
          | While working in finance & operations in the education & nonprofit sectors, I became obsessed with building more efficient, user-friendly digital experiences. 
          | This led me to #[a(href="http://www.svcseattle.com/classes/web-design-and-ux/") study UX], which in turn led me to pursue frontend web design.
          br
          br
          | I enjoy #[a(href="https://www.instagram.com/p/3UosiRgCiO/") cats], 
          | #[a(href="http://www.kcrw.com/music") thoughtfully ] curated #[a(href="http://soulection.com/radio/") DJ sets], 
          | and homemade kimchi.
        #bio-image

    #portfolio-intro
      p#portfolio-intro-text
        | Here's what I've been working on lately:
    
    #p3.portfolio
      .container
        #shape-p3
        .content-portfolio
          h1 Ready.city
          p  
             | Ready.city walks helps users prepare for natural disasters by
             | walking them through a simple assessment of their home,
             | emergency gear, dependents and contacts; from this input it generates
             | a custom to-do list with preparations unique to their situation.
             | In future iterations, users will be able to share preparation plans
             | and budget how much money and time will be needed to create a 
             | completed preparednesss plan. #[a.gh-link(href="https://github.com/danieladler/earthquake-prep") github]
          ul.tag-container
            li #[i.fa.fa-thumbs-up] Polymorphic Association & JSONB
            li #[i.fa.fa-thumbs-up] React.js
    
    #p2.portfolio
      .container
        #shape-p2
        .content-portfolio
          h1 PetPointer
          p #[a(href='http://petpointer.herokuapp.com/') PetPointer]
            |  is like WalkScore, but with a focus on pets. It uses a custom
            | algorithm to calculate the pet-friendliness of any full address 
            | based on that location's proximity to parks, Yelp rating quality 
            | of vets and pet stores & services, interior and exterior square 
            | footage, and noise pollution. Address searches return a Google map, 
            | unique PetPointer score, and details for how the score was 
            | calculated. Logged-in users can save locations as favorites, which 
            | are then viewable on the account page.
            |   #[a.gh-link(href="https://github.com/xbell/petpointer") github]
          ul.tag-container
            li #[i.fa.fa-thumbs-up] APIs: Google Maps, Zillow, Yelp
            li #[i.fa.fa-thumbs-up] Bourbon, Neat, Bitters
            li #[i.fa.fa-thumbs-up] SASS mixins

    #p1.portfolio
      a#portfolio.smooth
      .container
        #shape-p1
        .content-portfolio
          h1 PhotoSquid
          p #[a(href='http://image-rater-dadler.herokuapp.com/') PhotoSquid] 
            | is an image-sharing and -rating platform. Users can create 
            | accounts and upload photos into a personal library. A photo can be 
            | rated and commented on by any user except its creator. Users can 
            | view and rate a random photo via the navbar but will never see a 
            | photo they have already rated. Users are notified via e-mail when 
            | one of their photos has been rated. All photos are sorted by 
            | overall rating scores on the rankings page. 
            | #[a.gh-link(href="https://github.com/danieladler/image-rater") github]

          ul.tag-container
            li #[i.fa.fa-thumbs-up] Image uploading w/ CarrierWave
            li #[i.fa.fa-thumbs-up] Image storage w/ AWS/S3
            li #[i.fa.fa-thumbs-up] User notification emails w/ Rails mailers
  #footer
    #footer-main
      #footer-left
        a(href="https://github.com/danieladler/")
          img(src="https://s3-us-west-2.amazonaws.com/dadler-codes/expressJS-development/github.svg").icon
        a(href="http://twitter.com/adlerography")
          img(src="https://s3-us-west-2.amazonaws.com/dadler-codes/expressJS-development/twitter.svg").icon
        a(href="http://instagram.com/dadler")
          img(src="https://s3-us-west-2.amazonaws.com/dadler-codes/expressJS-development/instagram.svg").icon
        a(href="https://www.linkedin.com/pub/daniel-adler/13/a59/a45")
          img(src="https://s3-us-west-2.amazonaws.com/dadler-codes/expressJS-development/linkedin.svg").icon
        a(href="mailto:hello@dadler.codes")
          img(src="https://s3-us-west-2.amazonaws.com/dadler-codes/expressJS-development/email.svg").icon

      #footer-right
        a(href="#top").footer-link       Daniel Adler
        a(href="#about").footer-link     about
        a(href="#portfolio").footer-link portfolio
